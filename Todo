2008-07-26  Andreas J. Koenig  <andreas.koenig.7os6VVqR@franz.ak.mind.de>

	* it just occurred to me that mirroring hosts can help out each other
	even without rewriting the recentfile. Just fetch the stuff to mirror
	from several places, bingo. But that's something that should rather live
	in a separate package or in rsync directly.

	* cronjobs are unsuited because with ntp they would all come at the full
	minute and disturb each other. Besides that I'd hate to have a backbone
	with more than a few seconds latency.

2008-07-25  Andreas J. Koenig  <andreas.koenig.7os6VVqR@franz.ak.mind.de>

	* a second rsync server with access control for PAUSE

	* if there were a filesystem based on this, it would have a slow access
	to inexistent files. It would probably provide wrong readdir (only based
	on current content) or also a slow one (based on a recentfile written
	after the call). But it would provide fast access to existing files. Or
	one would deliberately allow slightly blurred answers based on some
	sqlite reflection of the recentfiles.

	* todo: write a variant of mirror() that combines two or more
	recentfiles and treats them like one

	* todo: signal handler to remove the tempfile

2008-07-24  Andreas J. Koenig  <andreas.koenig.7os6VVqR@franz.ak.mind.de>

	* now that we have the symlink I forgot how it should be used in
	practice.

	* the z loop: add missing files to Z file. Just append them (instead of
	prepending). So one guy prepends something from the Y file from time to
	time and another guy appends something rather frequently. Collecting
	pond. When Y merges into Z, things get epoch and the collecting pond
	gets smaller. What exactly are "missing files"?

	take note of current epoch of the alpha file, let's call it the
	recent-ts

	find all files on disk

	remove all files registered in the recentworld up to recent-ts

	remove all files that have been deleted after recent-ts according to
	recentworld

2008-07-23  Andreas J. Koenig  <andreas.koenig.7os6VVqR@franz.ak.mind.de>

	* rersyncrecent might be a cronjob with a (locked) state file which
	contains things like after and maybe last z sync or such?

	rrr-mirror might be an alternative name but how would we justify the
	three Rs when there is no Re-Rsync-Recent?

	With the --loop parameter it is an endless loop, without it is no loop.
	At least this is simple.

	* todo: new accssor z-interval specifies how often the Z file is updated
	against the filesystem. We probably want no epoch stamp on these
	entries. And we want to be able to filter the entries (e.g. no
	by-modules and by-category tree)

2008-07-20  Andreas J. Koenig  <andreas.koenig.7os6VVqR@franz.ak.mind.de>

	* Fill the Z file. gc or fsck or both. Somehow we must get the old files
	into Z. We do not need the other files filled up with filesystem
	contents though.

	* need interface to query for a file in order to NOT call update on
	PAUSE a second time within a short time.

2008-07-19  Andreas J. Koenig  <andreas.koenig.7os6VVqR@franz.ak.mind.de>

	* recommended update interval? Makes no sense, is different for
	different users.

	* Moosify

	Local Variables:
	mode: change-log
	change-log-default-name: "Todo"
	tab-width: 2
	left-margin: 2
	End:
